#cloud-config
# yaml-language-server: $schema=https://raw.githubusercontent.com/canonical/cloud-init/main/cloudinit/config/schemas/versions.schema.cloud-config.json
# vim: syntax=yaml

network:
  version: 2
  ethernets:
    eth0:
      dhcp4: true
      dhcp6: true

# You could modify this for your own user information
users:
  - name: worker
    gecos: "worker"
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: users,video,input
    ssh_authorized_keys:
      - "{{ .Env.PUBLIC_SSH_KEY }}"

# Set the locale of the system
locale: "en_US.UTF-8"

# Set the timezone
timezone: "UTC"

# Update apt packages on first boot
package_update: true
package_upgrade: true
package_reboot_if_required: true

# Install any additional apt packages you need here
packages:
  # RaspberryPI Kernel Modules
  - linux-modules-extra-raspi
  # Time
  - fake-hwclock
  # Networking stuff
  - resolvconf
  - ifupdown
  # Bye bye hackers.
  - fail2ban
  # For DNS at home
  - avahi-daemon
  # Nice stuff
  - neovim
  # Storage
  - nfs-common

write_files:
  - content: |-
      LABEL=writable          /               ext4    defaults,noatime       0 0
      LABEL=system-boot       /boot/firmware  vfat    defaults               0 1
      # We can mount these dirs as tmpfs to save the life of our flash storage
      tmpfs /tmp tmpfs defaults,noatime,mode=1777,size=200M 0 0
      tmpfs /var/tmp tmpfs defaults,noatime,nosuid,nodev,noexec,mode=0755,size=500M 0 0
      tmpfs /var/log tmpfs defaults,noatime,nosuid,nodev,noexec,mode=0755,size=500M 0 0
    path: /etc/fstab

# These commands will be ran once on first boot only
runcmd:
  # Configure ntp
  - timedatectl set-ntp true

  # Generate a hostname, and start advertising it.
  - 'hostnamectl set-hostname "$(uuidgen | awk -F - "{ print \$1\$2\$3 }")"'
  - 'echo "127.0.0.1 $(cat /etc/hostname) $(cat /etc/hostname).local" >> /etc/hosts'
  - "systemctl restart --no-block avahi-daemon"

  # systemd
  - [systemctl, daemon-reload]
  - [
      systemctl,
      enable,
      --now,
      --no-block,
      avahi-daemon.service,
      haveged.service,
      ssh.service,
      fail2ban.service,
      fake-hwclock.service,
    ]

  # remove the ubuntu user(s), just in case
  - [sh, -c, "userdel ubuntu || exit 0"]
  - [sh, -c, "userdel pi || exit 0"]

  # Kubernetes Fixes
  - "echo 'br_netfilter' | tee -a /etc/modules"
  - [
      sh,
      -c,
      'echo "console=serial0,115200 dwc_otg.lpm_enable=0 console=tty1 root=LABEL=writable rootfstype=ext4 rootwait fixrtc quiet splash cgroup_enable=memory cgroup_memory=1 systemd.unified_cgroup_hierarchy=0" >/boot/firmware/cmdline.txt',
    ]
